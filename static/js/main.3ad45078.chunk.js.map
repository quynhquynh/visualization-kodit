{"version":3,"sources":["utils/averagePriceSqm.js","utils/filter.js","fields/index.js","fields/location.js","fields/size_sqm.js","fields/price.js","fields/built_year.js","fields/rooms.js","fields/options.js","utils/index.js","utils/checkEmpty.js","utils/visualize.js","components/TextInput.js","components/Checkbox.js","components/Field.js","containers/Form.js","components/PercentagePie.js","components/StackedBar.js","components/SimpleLine.js","components/SimpleArea.js","App.js","serviceWorker.js","index.js"],"names":["averagePriceSqm","arr","length","sum","map","item","price_sqm","reduce","a","b","null_arr","filter","filterOptions","res","value","result","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_loop","val","balcony","description","includes","Object","toConsumableArray","concat","_iterator","Symbol","iterator","next","done","err","return","filterRoom","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_loop2","room_count","parseInt","_iterator2","filterYear","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_loop3","num","operator","substr","built_year","_iterator3","src_fields","loc","name","label","id","placeholder","area","className","aprt_price","year","rooms","opts","utils","obj","location","size_sqm","price","options","_value","toLowerCase","trim","split","_value2","slicedToArray","char","street","street_number","toString","len","filterLoc","min","max","filterSize","Math","pow","filterPrice","values","notEmpty","_i","constructor","String","Array","every","v","state","years","price_room","price_loc","_calcPieLineChart","rlen","copy_rooms","copy_price_room","i","room_arr","push","calcPieLineChart","copy_balcony","num_balcony","num_original","calcPieChart","fields","copy_years","yearly","single_year","calcBarChart","copy_price_loc","seen","apt","round","hasOwnProperty","vals","keys","max_price","apply","min_price","calcAreaChart","Input","_ref","handleChange","react_default","createElement","react","type","onChange","e","Checkbox","checked","handleCheck","htmlFor","Field","p","TextInput","assign","key","components_Checkbox","Form","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_e$target","target","assertThisInitialized","setState","defineProperty","objectSpread","_e$target2","copy","index","indexOf","splice","handleSubmit","preventDefault","_this$state","allFields","onSubmit","field","components_Field","PureComponent","RADIAN","PI","renderCustomizedLabel","cx","cy","midAngle","innerRadius","outerRadius","percent","radius","x","cos","y","sin","fixed","toFixed","fixed_pct","fill","textAnchor","dominantBaseline","PercentagePie","_ref2","ResponsiveContainer","width","height","PieChart","Pie","isAnimationActive","data","dataKey","labelLine","Tooltip","StackedBar","COLORS","BarChart","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","YAxis","opt","Bar","stackId","Legend","wrapperStyle","display","SimpleLine","LineChart","tickFormatter","toLocaleString","formatter","Line","stroke","activeDot","r","SimpleArea","AreaChart","Area","filterFunc","checkEmpty","visualize","App","handleFilter","original","loading","axios","post","who_rules","response","containers_Form","components_PercentagePie","components_SimpleArea","components_StackedBar","components_SimpleLine","Component","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","status","headers","get","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.3ad45078.chunk.js","sourcesContent":["export const averagePriceSqm = arr => {\r\n  if (!arr.length) {\r\n    return null;\r\n  }\r\n  const sum = arr.map(item => item.price_sqm).reduce((a, b) => a + b);\r\n  const null_arr = arr.filter(a => !a.price_sqm);\r\n  const len = arr.length - null_arr.length;\r\n  return sum / len;\r\n};\r\n","export const filterLoc = (arr, value) => {\r\n  value = value.toLowerCase().trim();\r\n  value = value.split(\" \");\r\n  const [char, num] = value;\r\n  if (!num) {\r\n    const len = char.length;\r\n    return arr.filter(a => a.street.toLowerCase().substr(0, len) === char);\r\n  } else {\r\n    return arr.filter(\r\n      a => a.street.toLowerCase() === char && a.street_number.toString() === num\r\n    );\r\n  }\r\n};\r\n\r\nexport const filterOptions = (arr, res, value) => {\r\n  arr = res.length ? res : arr;\r\n  let result = [];\r\n  for (let val of value) {\r\n    let filter = [];\r\n    if (val === \"balcony\") {\r\n      filter = arr.filter(a => a.balcony > 0);\r\n    } else {\r\n      filter = arr.filter(a => a.description && a.description.includes(val));\r\n    }\r\n    result = [...result, ...filter];\r\n  }\r\n  return result;\r\n};\r\n\r\nexport const filterPrice = (arr, res, value) => {\r\n  arr = res.length ? res : arr;\r\n  let { min, max } = value;\r\n  min = parseInt(min) || 0;\r\n  max = parseInt(max) || Math.pow(10, 7);\r\n  return arr.filter(\r\n    a => a.size_sqm * a.price_sqm >= min && a.size_sqm * a.price_sqm <= max\r\n  );\r\n};\r\n\r\nexport const filterRoom = (arr, res, value) => {\r\n  arr = res.length ? res : arr;\r\n  let result = [];\r\n  for (let val of value) {\r\n    const filter = arr.filter(a => a.room_count === parseInt(val));\r\n    result = [...result, ...filter];\r\n  }\r\n  return result;\r\n};\r\n\r\nexport const filterSize = (arr, res, value) => {\r\n  arr = res.length ? res : arr;\r\n  let { min, max } = value;\r\n  min = parseInt(min) || 0;\r\n  max = parseInt(max) || 200;\r\n  return arr.filter(a => a.size_sqm >= min && a.size_sqm <= max);\r\n};\r\n\r\nexport const filterYear = (arr, res, value) => {\r\n  arr = res.length ? res : arr;\r\n  let result = [];\r\n  for (let val of value) {\r\n    const num = parseInt(val);\r\n    const operator = val.substr(4);\r\n    let filter = [];\r\n    if (operator) {\r\n      filter = arr.filter(\r\n        a => (operator === \"<\" ? a.built_year < num : a.built_year > num)\r\n      );\r\n    } else {\r\n      const next = num + 20;\r\n      filter = arr.filter(a => a.built_year >= num && a.built_year < next);\r\n    }\r\n    result = [...result, ...filter];\r\n  }\r\n  return result;\r\n};\r\n\r\nexport const filter = (arr, obj) => {\r\n  let result = [];\r\n  const { location, room_count, built_year, size_sqm, price, options } = obj;\r\n  if (location) {\r\n    result = filterLoc(arr, location);\r\n  }\r\n  if (size_sqm.min || size_sqm.max) {\r\n    result = filterSize(arr, result, size_sqm);\r\n  }\r\n  if (price.min || price.max) {\r\n    result = filterPrice(arr, result, price);\r\n  }\r\n  if (room_count.length) {\r\n    result = filterRoom(arr, result, room_count);\r\n  }\r\n  if (built_year.length) {\r\n    result = filterYear(arr, result, built_year);\r\n  }\r\n  if (options.length) {\r\n    result = filterOptions(arr, result, options);\r\n  }\r\n  return result;\r\n};\r\n","import { built_year } from \"./built_year\";\r\nimport { options } from \"./options\";\r\nimport { rooms } from \"./rooms\";\r\nimport { size_sqm } from \"./size_sqm\";\r\nimport { price } from \"./price\";\r\nimport { location } from \"./location\";\r\n\r\nexport default {\r\n  loc: location,\r\n  area: size_sqm,\r\n  aprt_price: price,\r\n  year: built_year,\r\n  rooms,\r\n  opts: options\r\n};\r\n","export const location = [\r\n  {\r\n    name: \"location\",\r\n    label: \"Location\",\r\n    id: \"location\",\r\n    placeholder: \"Vallikatu\"\r\n  }\r\n];\r\n","export const size_sqm = [\r\n  {\r\n    name: \"size_sqm\",\r\n    placeholder: \"min\",\r\n    id: \"size_sqm_min\",\r\n    className: \"min\"\r\n  },\r\n  {\r\n    name: \"size_sqm\",\r\n    placeholder: \"max\",\r\n    id: \"size_sqm_max\",\r\n    className: \"max\"\r\n  }\r\n];\r\n","export const price = [\r\n  {\r\n    name: \"price\",\r\n    placeholder: \"min\",\r\n    id: \"price_min\",\r\n    className: \"min\"\r\n  },\r\n  {\r\n    name: \"price\",\r\n    placeholder: \"max\",\r\n    id: \"price_max\",\r\n    className: \"max\"\r\n  }\r\n];\r\n","export const built_year = [\r\n  {\r\n    name: \"built_year\",\r\n    label: \"< 1970\",\r\n    id: \"1970<\"\r\n  },\r\n  {\r\n    name: \"built_year\",\r\n    label: \"1970 - 1989\",\r\n    id: \"1970\"\r\n  },\r\n  {\r\n    name: \"built_year\",\r\n    label: \"1990 - 2009\",\r\n    id: \"1990\"\r\n  },\r\n  {\r\n    name: \"built_year\",\r\n    label: \"> 2010\",\r\n    id: \"2010>\"\r\n  }\r\n];\r\n","export const rooms = [\r\n  {\r\n    name: \"room_count\",\r\n    label: \"1R\",\r\n    id: \"1\"\r\n  },\r\n  {\r\n    name: \"room_count\",\r\n    label: \"2R\",\r\n    id: \"2\"\r\n  },\r\n  {\r\n    name: \"room_count\",\r\n    label: \"3R\",\r\n    id: \"3\"\r\n  },\r\n  {\r\n    name: \"room_count\",\r\n    label: \"4R\",\r\n    id: \"4\"\r\n  },\r\n  {\r\n    name: \"room_count\",\r\n    label: \"5R\",\r\n    id: \"5\"\r\n  }\r\n];\r\n","export const options = [\r\n  {\r\n    name: \"options\",\r\n    label: \"Balcony\",\r\n    id: \"balcony\"\r\n  },\r\n  {\r\n    name: \"options\",\r\n    label: \"Terrace\",\r\n    id: \"terassi\"\r\n  },\r\n  {\r\n    name: \"options\",\r\n    label: \"Storage\",\r\n    id: \"vh\"\r\n  },\r\n  {\r\n    name: \"options\",\r\n    label: \"Open-kitchen\",\r\n    id: \"avok\"\r\n  },\r\n  {\r\n    name: \"options\",\r\n    label: \"Kitchenette\",\r\n    id: \"kk\"\r\n  }\r\n];\r\n","import { averagePriceSqm } from \"./averagePriceSqm\";\r\nimport { visualize } from \"./visualize\";\r\nimport { filter } from \"./filter\";\r\nimport { checkEmpty } from \"./checkEmpty\";\r\n\r\nexport default {\r\n  filter,\r\n  averagePriceSqm,\r\n  checkEmpty,\r\n  visualize\r\n};\r\n","import { Object } from \"core-js\";\r\n\r\nexport const checkEmpty = obj => {\r\n  const values = Object.values(obj);\r\n  const notEmpty = {};\r\n  for (let val of values) {\r\n    if (val.constructor === String) {\r\n      notEmpty[val] = !!val;\r\n    } else if (val.constructor === Array) {\r\n      notEmpty[val] = !!val.length;\r\n    } else {\r\n      notEmpty[val] = !(!val.min && !val.max);\r\n    }\r\n  }\r\n  return Object.values(notEmpty).every(v => !v);\r\n};\r\n","import { filterOptions } from \"./filter\";\r\nimport { filterRoom } from \"./filter\";\r\nimport { averagePriceSqm } from \"./averagePriceSqm\";\r\nimport { filterYear } from \"./filter\";\r\nimport fields from \"../fields\";\r\n\r\nconst calcPieChart = (arr, balcony) => {\r\n  const len = balcony.length;\r\n  const copy_balcony = [...balcony];\r\n  const num_balcony = filterOptions(arr, [], [\"balcony\"]).length;\r\n  const num_original = arr.length;\r\n  if (!len) {\r\n    copy_balcony.push({ name: \"balcony\", value: num_balcony });\r\n    copy_balcony.push({\r\n      name: \"no balcony\",\r\n      value: num_original - num_balcony\r\n    });\r\n  } else {\r\n    copy_balcony[0].value = filterOptions(arr, [], [\"balcony\"]).length;\r\n    copy_balcony[1].value = arr.length - copy_balcony[0].value;\r\n  }\r\n  return copy_balcony;\r\n};\r\n\r\nconst calcPieLineChart = (arr, rooms, price_room) => {\r\n  const rlen = rooms.length;\r\n  const copy_rooms = [...rooms];\r\n  const copy_price_room = [...price_room];\r\n  for (let i = 1; i < 6; i++) {\r\n    const room_arr = filterRoom(arr, [], [i]);\r\n    const len = room_arr.length;\r\n    if (rlen) {\r\n      copy_rooms[i - 1].value = len;\r\n      copy_price_room[i - 1].price_sqm = averagePriceSqm(room_arr);\r\n    } else {\r\n      copy_rooms.push({\r\n        name: `#${i} room(s)`,\r\n        value: len\r\n      });\r\n      copy_price_room.push({\r\n        name: `#${i} room(s)`,\r\n        price_sqm: averagePriceSqm(room_arr)\r\n      });\r\n    }\r\n  }\r\n  return {\r\n    copy_rooms,\r\n    copy_price_room\r\n  };\r\n};\r\n\r\nconst calcBarChart = (arr, years, fields) => {\r\n  const len = years.length;\r\n  const copy_years = [...years];\r\n  const { year, opts } = fields;\r\n  for (let i = 0; i < year.length; i++) {\r\n    const yearly = filterYear(arr, [], [year[i].id]);\r\n    if (len) {\r\n      const single_year = copy_years[i];\r\n      for (let opt of opts) {\r\n        const { id } = opt;\r\n        single_year[id] = filterOptions(yearly, [], [id]).length;\r\n      }\r\n    } else {\r\n      const obj = {\r\n        name: year[i].label\r\n      };\r\n      for (let opt of opts) {\r\n        const { id } = opt;\r\n        obj[id] = filterOptions(yearly, [], [id]).length;\r\n      }\r\n      copy_years.push(obj);\r\n    }\r\n  }\r\n  return copy_years;\r\n};\r\n\r\nconst calcAreaChart = (arr, price_loc) => {\r\n  const len = price_loc.length;\r\n  const copy_price_loc = [...price_loc];\r\n  const seen = {};\r\n  for (let apt of arr) {\r\n    const { street, street_number, price_sqm, size_sqm } = apt;\r\n    const name = `${street} ${street_number}`;\r\n    const price = Math.round(size_sqm * price_sqm);\r\n    if (!seen.hasOwnProperty(name)) {\r\n      seen[name] = [];\r\n    }\r\n    seen[name].push(price);\r\n  }\r\n  const vals = Object.values(seen);\r\n  const keys = Object.keys(seen);\r\n  if (len) {\r\n    copy_price_loc.length = 0;\r\n  }\r\n  for (let i = 0; i < vals.length; i++) {\r\n    const max_price = Math.max(...vals[i]);\r\n    const min_price = Math.min(...vals[i]);\r\n    copy_price_loc.push({\r\n      name: keys[i],\r\n      min_price,\r\n      max_price\r\n    });\r\n  }\r\n  return copy_price_loc;\r\n};\r\n\r\nexport const visualize = (arr, state) => {\r\n  const { balcony, rooms, years, price_room, price_loc } = state;\r\n  const { copy_rooms, copy_price_room } = calcPieLineChart(\r\n    arr,\r\n    rooms,\r\n    price_room\r\n  );\r\n  return {\r\n    balcony: calcPieChart(arr, balcony),\r\n    rooms: copy_rooms,\r\n    price_room: copy_price_room,\r\n    years: calcBarChart(arr, years, fields),\r\n    price_loc: calcAreaChart(arr, price_loc)\r\n  };\r\n};\r\n","import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Input = ({ name, id, className, placeholder, value, handleChange }) => {\r\n  if ([\"min\", \"max\"].includes(placeholder)) {\r\n    const { min, max } = value;\r\n    value = placeholder === \"min\" ? min : max;\r\n  }\r\n  return (\r\n    <Fragment>\r\n      <input\r\n        type=\"text\"\r\n        name={name}\r\n        id={id && id}\r\n        className={className && className}\r\n        value={value}\r\n        placeholder={placeholder}\r\n        onChange={e => handleChange(e, className)}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n\r\nInput.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n  className: PropTypes.string,\r\n  placeholder: PropTypes.string.isRequired,\r\n  label: PropTypes.string,\r\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.shape({})])\r\n    .isRequired,\r\n  handleChange: PropTypes.func.isRequired\r\n};\r\n","import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Checkbox = ({ name, id, label, checked, handleCheck }) => (\r\n  <Fragment>\r\n    <input\r\n      type=\"checkbox\"\r\n      name={name}\r\n      id={id}\r\n      checked={checked}\r\n      onChange={e => handleCheck(e, id)}\r\n    />\r\n    <label htmlFor={id}>{label}</label>\r\n    <br />\r\n  </Fragment>\r\n);\r\n\r\nexport default Checkbox;\r\n\r\nCheckbox.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n  label: PropTypes.string,\r\n  checked: PropTypes.bool,\r\n  handleCheck: PropTypes.func.isRequired\r\n};\r\n","import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport TextInput from \"./TextInput\";\r\nimport Checkbox from \"./Checkbox\";\r\n\r\nconst Field = ({ p, arr, value, className, handleChange, handleCheck }) => (\r\n  <Fragment>\r\n    <p>{p}</p>\r\n    <div className={className && className}>\r\n      {arr.map(\r\n        (item, i) =>\r\n          handleChange ? (\r\n            <TextInput\r\n              key={i}\r\n              {...item}\r\n              value={value}\r\n              handleChange={handleChange}\r\n            />\r\n          ) : (\r\n            <Checkbox key={i} {...item} handleCheck={handleCheck} />\r\n          )\r\n      )}\r\n    </div>\r\n  </Fragment>\r\n);\r\n\r\nexport default Field;\r\n\r\nField.propTypes = {\r\n  p: PropTypes.string.isRequired,\r\n  arr: PropTypes.array.isRequired,\r\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.shape({})]),\r\n  className: PropTypes.string,\r\n  handleChange: PropTypes.func,\r\n  handleCheck: PropTypes.func\r\n};\r\n","import React, { PureComponent, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"../styles/_Form.scss\";\r\nimport fields from \"../fields\";\r\n\r\nimport Field from \"../components/Field\";\r\n\r\nclass Form extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      location: \"\",\r\n      room_count: [],\r\n      built_year: [],\r\n      size_sqm: {\r\n        min: \"\",\r\n        max: \"\"\r\n      },\r\n      price: {\r\n        min: \"\",\r\n        max: \"\"\r\n      },\r\n      options: []\r\n    };\r\n  }\r\n\r\n  handleChange = (e, className) => {\r\n    const { name, value } = e.target;\r\n    const { state } = this;\r\n    switch (name) {\r\n    case \"location\":\r\n      this.setState({ [name]: value });\r\n      break;\r\n    default:\r\n      this.setState({\r\n        [name]: { ...state[name], [className]: value }\r\n      });\r\n      break;\r\n    }\r\n  };\r\n\r\n  handleCheck = (e, id) => {\r\n    const { name, checked } = e.target;\r\n    const { state } = this;\r\n    if (!checked) {\r\n      const copy = [...state[name]];\r\n      const index = copy.indexOf(id);\r\n      copy.splice(index, 1);\r\n      this.setState({\r\n        [name]: copy\r\n      });\r\n    } else {\r\n      this.setState({\r\n        [name]: [...state[name], id]\r\n      });\r\n    }\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { filter } = this.props;\r\n    filter(this.state);\r\n  };\r\n\r\n  render() {\r\n    const { loc, area, aprt_price, year, rooms, opts } = fields;\r\n    const { location, size_sqm, price } = this.state;\r\n    const { handleChange, handleCheck } = this;\r\n    const allFields = [\r\n      {\r\n        p: \"Location:\",\r\n        arr: loc,\r\n        value: location,\r\n        handleChange\r\n      },\r\n      {\r\n        p: \"Number of rooms:\",\r\n        arr: rooms,\r\n        className: \"flex\",\r\n        handleCheck\r\n      },\r\n      {\r\n        p: \"Built year:\",\r\n        arr: year,\r\n        handleCheck\r\n      },\r\n      {\r\n        p: \"Area:\",\r\n        arr: area,\r\n        className: \"grid\",\r\n        value: size_sqm,\r\n        handleChange\r\n      },\r\n      {\r\n        p: \"Price:\",\r\n        arr: aprt_price,\r\n        className: \"grid\",\r\n        value: price,\r\n        handleChange\r\n      },\r\n      {\r\n        p: \"Other options\",\r\n        arr: opts,\r\n        handleCheck\r\n      }\r\n    ];\r\n\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        {allFields.map((field, i) => (\r\n          <Field key={i} {...field} />\r\n        ))}\r\n        <Fragment>\r\n          <input type=\"submit\" value=\"Search data\" />\r\n        </Fragment>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n\r\nForm.propTypes = {\r\n  filter: PropTypes.func.isRequired\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { PieChart, Pie, Tooltip, ResponsiveContainer } from \"recharts\";\r\n\r\nconst RADIAN = Math.PI / 180;\r\nconst renderCustomizedLabel = ({\r\n  cx,\r\n  cy,\r\n  midAngle,\r\n  innerRadius,\r\n  outerRadius,\r\n  percent,\r\n  index\r\n}) => {\r\n  const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\r\n  const x = cx + radius * Math.cos(-midAngle * RADIAN);\r\n  const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n  const fixed = parseInt((percent * 100).toFixed(0));\r\n  const fixed_pct = !fixed ? \"\" : `${fixed}%`;\r\n\r\n  return (\r\n    <text\r\n      x={x}\r\n      y={y}\r\n      fill=\"white\"\r\n      textAnchor={x > cx ? \"start\" : \"end\"}\r\n      dominantBaseline=\"central\"\r\n    >\r\n      {fixed_pct}\r\n    </text>\r\n  );\r\n};\r\n\r\nconst PercentagePie = ({ balcony, rooms }) => (\r\n  <ResponsiveContainer width=\"100%\" height={300}>\r\n    <PieChart width={800} height={300}>\r\n      <Pie\r\n        isAnimationActive={false}\r\n        data={balcony}\r\n        dataKey=\"value\"\r\n        outerRadius={70}\r\n        fill=\"#8884d8\"\r\n        labelLine={false}\r\n        label={renderCustomizedLabel}\r\n      />\r\n      <Pie\r\n        isAnimationActive={false}\r\n        data={rooms}\r\n        dataKey=\"value\"\r\n        outerRadius={95}\r\n        innerRadius={75}\r\n        fill=\"#82ca9d\"\r\n        label\r\n      />\r\n      <Tooltip />\r\n    </PieChart>\r\n  </ResponsiveContainer>\r\n);\r\n\r\nexport default PercentagePie;\r\n\r\nPercentagePie.propTypes = {\r\n  balcony: PropTypes.array.isRequired,\r\n  rooms: PropTypes.array.isRequired\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer\r\n} from \"recharts\";\r\n\r\nconst StackedBar = ({ data, opts }) => {\r\n  const COLORS = [\"#17becf\", \"#82ca9d\", \"#FFBB28\", \"#8884d8\", \"#FF8042\"];\r\n\r\n  return (\r\n    <ResponsiveContainer width=\"100%\" height={350}>\r\n      <BarChart\r\n        width={480}\r\n        height={350}\r\n        data={data}\r\n        margin={{ top: 50, right: 0, left: 0, bottom: 0 }}\r\n      >\r\n        <CartesianGrid strokeDasharray=\"3 3\" />\r\n        <XAxis dataKey=\"name\" />\r\n        <YAxis />\r\n        <Tooltip />\r\n        {opts.map((opt, i) => (\r\n          <Bar key={i} dataKey={opt.id} stackId=\"a\" fill={COLORS[i]} />\r\n        ))}\r\n        <Legend wrapperStyle={{ left: \"25%\", display: \"flex\" }} />\r\n      </BarChart>\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nexport default StackedBar;\r\n\r\nStackedBar.propTypes = {\r\n  data: PropTypes.array.isRequired,\r\n  opts: PropTypes.array.isRequired\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer\r\n} from \"recharts\";\r\n\r\nconst SimpleLine = ({ data }) => (\r\n  <ResponsiveContainer width=\"100%\" height={350}>\r\n    <LineChart\r\n      width={570}\r\n      height={350}\r\n      data={data}\r\n      margin={{ top: 60, right: 30, left: 15, bottom: 5 }}\r\n    >\r\n      <XAxis dataKey=\"name\" />\r\n      <YAxis tickFormatter={value => value.toLocaleString()} />\r\n      <CartesianGrid strokeDasharray=\"3 3\" />\r\n      <Tooltip formatter={value => value.toFixed(1).toLocaleString()} />\r\n      <Legend wrapperStyle={{ left: \"35%\" }} />\r\n      <Line\r\n        type=\"monotone\"\r\n        dataKey=\"price_sqm\"\r\n        stroke=\"#17becf\"\r\n        activeDot={{ r: 9 }}\r\n      />\r\n    </LineChart>\r\n  </ResponsiveContainer>\r\n);\r\n\r\nexport default SimpleLine;\r\n\r\nSimpleLine.propTypes = {\r\n  data: PropTypes.array.isRequired\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport {\r\n  AreaChart,\r\n  Area,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  ResponsiveContainer\r\n} from \"recharts\";\r\n\r\nconst SimpleArea = ({ data }) => (\r\n  <ResponsiveContainer width=\"100%\" height={300}>\r\n    <AreaChart\r\n      width={590}\r\n      height={300}\r\n      data={data}\r\n      margin={{ top: 25, right: 40, left: 20, bottom: 0 }}\r\n    >\r\n      <CartesianGrid strokeDasharray=\"3 3\" />\r\n      <XAxis dataKey=\"name\" />\r\n      <YAxis tickFormatter={value => value.toLocaleString()} />\r\n      <Tooltip formatter={value => value.toLocaleString()} />\r\n      <Area\r\n        type=\"monotone\"\r\n        dataKey=\"min_price\"\r\n        stackId=\"1\"\r\n        stroke=\"#8884d8\"\r\n        fill=\"#8884d8\"\r\n      />\r\n      <Area\r\n        type=\"monotone\"\r\n        dataKey=\"max_price\"\r\n        stackId=\"1\"\r\n        stroke=\"#82ca9d\"\r\n        fill=\"#82ca9d\"\r\n      />\r\n    </AreaChart>\r\n  </ResponsiveContainer>\r\n);\r\n\r\nexport default SimpleArea;\r\n\r\nSimpleArea.propTypes = {\r\n  data: PropTypes.array.isRequired\r\n};\r\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nimport \"./styles/_App.scss\";\nimport filterFunc from \"./utils\";\nimport fields from \"./fields\";\n\nimport Form from \"./containers/Form\";\nimport PercentagePie from \"./components/PercentagePie\";\nimport StackedBar from \"./components/StackedBar\";\nimport SimpleLine from \"./components/SimpleLine\";\nimport SimpleArea from \"./components/SimpleArea\";\n\nconst { filter, checkEmpty, visualize } = filterFunc;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      balcony: [],\n      rooms: [],\n      years: [],\n      price_room: [],\n      price_loc: [],\n      loading: true\n    };\n    this.original = [];\n  }\n\n  async componentDidMount() {\n    const url =\n      \"https://cc677kr6sc.execute-api.eu-central-1.amazonaws.com/data\";\n    const response = await axios.post(url, {\n      who_rules: \"kodit.io\"\n    });\n    this.original = [...this.original, ...response.data];\n    const { original, state } = this;\n\n    this.setState({\n      loading: false,\n      ...visualize(original, state)\n    });\n  }\n\n  handleFilter = values => {\n    const apt = [...this.original];\n    const data = checkEmpty(values) ? apt : filter(apt, values);\n    this.setState({\n      ...visualize(data, this.state)\n    });\n  };\n\n  render() {\n    const { balcony, rooms, years, price_room, price_loc } = this.state;\n    const { opts } = fields;\n    return (\n      <div className=\"App\">\n        <div>\n          <Form filter={this.handleFilter} />\n        </div>\n        <div className=\"grid-45\">\n          <PercentagePie balcony={balcony} rooms={rooms} />\n          <SimpleArea data={price_loc} />\n          <StackedBar data={years} opts={opts} />\n          <SimpleLine data={price_room} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.register();\n"],"sourceRoot":""}
{"version":3,"sources":["utils/averagePriceSqm.js","utils/filter.js","utils/index.js","utils/visualize.js","fields/index.js","fields/location.js","fields/size_sqm.js","fields/price.js","fields/built_year.js","fields/rooms.js","fields/options.js","components/Checkbox.js","components/TextInput.js","containers/Form.js","components/PercentagePie.js","components/StackedBar.js","components/SimpleLine.js","components/SimpleArea.js","App.js","serviceWorker.js","index.js"],"names":["averagePriceSqm","arr","length","sum","map","item","price_sqm","reduce","a","b","null_arr","filter","filterOptions","res","value","result","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_loop","val","balcony","description","includes","Object","toConsumableArray","concat","_iterator","Symbol","iterator","next","done","err","return","filterRoom","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_loop2","room_count","parseInt","_iterator2","filterYear","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_loop3","num","operator","substr","built_year","_iterator3","utils","_value","toLowerCase","trim","split","_value2","slicedToArray","char","street","street_number","toString","len","min","max","size_sqm","Math","pow","copy_balcony","num_balcony","num_original","push","name","rooms","price_room","rlen","copy_rooms","copy_price_room","i","room_arr","years","fields","copy_years","year","opts","yearly","id","single_year","obj","label","price_loc","copy_price_loc","seen","apt","price","round","hasOwnProperty","vals","values","keys","max_price","apply","min_price","src_fields","loc","placeholder","area","className","aprt_price","Checkbox","_ref","checked","handleCheck","react_default","createElement","react","type","onChange","e","htmlFor","Input","Form","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","_e$target","target","state","assertThisInitialized","setState","defineProperty","objectSpread","_e$target2","copy","index","indexOf","splice","handleSubmit","preventDefault","location","options","_this2","_this$state","onSubmit","TextInput","assign","room","components_Checkbox","key","size","p","opt","PureComponent","PercentagePie","ResponsiveContainer","width","height","PieChart","Pie","isAnimationActive","data","dataKey","cx","cy","outerRadius","fill","innerRadius","Tooltip","StackedBar","COLORS","BarChart","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","YAxis","Bar","stackId","Legend","wrapperStyle","display","SimpleLine","LineChart","Line","stroke","activeDot","r","SimpleArea","AreaChart","Area","filterLoc","filterFunc","filterSize","filterPrice","calcPieChart","calcPieLineChart","calcBarChart","calcAreaChart","App","handleFilter","apartments","original","copy_apartments","_calcPieLineChart","loading","axios","post","who_rules","response","_this$state3","containers_Form","components_PercentagePie","components_SimpleArea","components_StackedBar","components_SimpleLine","Component","Boolean","window","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f50c093b.chunk.js","sourcesContent":["export const averagePriceSqm = arr => {\r\n  if (!arr.length) {\r\n    return null;\r\n  }\r\n  const sum = arr.map(item => item.price_sqm).reduce((a, b) => a + b);\r\n  const null_arr = arr.filter(a => !a.price_sqm);\r\n  const len = arr.length - null_arr.length;\r\n  return sum / len;\r\n};\r\n","export const filterLoc = (arr, value) => {\r\n  value = value.toLowerCase().trim();\r\n  value = value.split(\" \");\r\n  const [char, num] = value;\r\n  if (!num) {\r\n    const len = char.length;\r\n    return arr.filter(a => a.street.toLowerCase().substr(0, len) === char);\r\n  } else {\r\n    return arr.filter(\r\n      a => a.street.toLowerCase() === char && a.street_number.toString() === num\r\n    );\r\n  }\r\n};\r\n\r\nexport const filterOptions = (arr, res, value) => {\r\n  arr = res.length ? res : arr;\r\n  let result = [];\r\n  for (let val of value) {\r\n    let filter = [];\r\n    if (val === \"balcony\") {\r\n      filter = arr.filter(a => a.balcony > 0);\r\n    } else {\r\n      filter = arr.filter(a => a.description && a.description.includes(val));\r\n    }\r\n    result = [...result, ...filter];\r\n  }\r\n  return result;\r\n};\r\n\r\nexport const filterPrice = (arr, res, value) => {\r\n  arr = res.length ? res : arr;\r\n  let { min, max } = value;\r\n  min = parseInt(min) || 0;\r\n  max = parseInt(max) || Math.pow(10, 7);\r\n  return arr.filter(\r\n    a => a.size_sqm * a.price_sqm >= min && a.size_sqm * a.price_sqm <= max\r\n  );\r\n};\r\n\r\nexport const filterRoom = (arr, res, value) => {\r\n  arr = res.length ? res : arr;\r\n  let result = [];\r\n  for (let val of value) {\r\n    const filter = arr.filter(a => a.room_count === parseInt(val));\r\n    result = [...result, ...filter];\r\n  }\r\n  return result;\r\n};\r\n\r\nexport const filterSize = (arr, res, value) => {\r\n  arr = res.length ? res : arr;\r\n  let { min, max } = value;\r\n  min = parseInt(min) || 0;\r\n  max = parseInt(max) || 200;\r\n  return arr.filter(a => a.size_sqm >= min && a.size_sqm <= max);\r\n};\r\n\r\nexport const filterYear = (arr, res, value) => {\r\n  arr = res.length ? res : arr;\r\n  let result = [];\r\n  for (let val of value) {\r\n    const num = parseInt(val);\r\n    const operator = val.substr(4);\r\n    let filter = [];\r\n    if (operator) {\r\n      filter = arr.filter(\r\n        a => (operator === \"<\" ? a.built_year < num : a.built_year > num)\r\n      );\r\n    } else {\r\n      const next = num + 20;\r\n      filter = arr.filter(a => a.built_year >= num && a.built_year < next);\r\n    }\r\n    result = [...result, ...filter];\r\n  }\r\n  return result;\r\n};\r\n","import { averagePriceSqm } from \"./averagePriceSqm\";\r\nimport {\r\n  calcPieChart,\r\n  calcPieLineChart,\r\n  calcBarChart,\r\n  calcAreaChart\r\n} from \"./visualize\";\r\nimport {\r\n  filterLoc,\r\n  filterSize,\r\n  filterPrice,\r\n  filterRoom,\r\n  filterYear,\r\n  filterOptions\r\n} from \"./filter\";\r\n\r\nexport default {\r\n  filterLoc,\r\n  filterSize,\r\n  filterPrice,\r\n  filterRoom,\r\n  filterYear,\r\n  filterOptions,\r\n  averagePriceSqm,\r\n  calcPieChart,\r\n  calcPieLineChart,\r\n  calcBarChart,\r\n  calcAreaChart\r\n};\r\n","import { filterOptions } from \"./filter\";\r\nimport { filterRoom } from \"./filter\";\r\nimport { averagePriceSqm } from \"./averagePriceSqm\";\r\nimport { filterYear } from \"./filter\";\r\n\r\nexport const calcPieChart = (arr, balcony) => {\r\n  const len = balcony.length;\r\n  const copy_balcony = [...balcony];\r\n  const num_balcony = filterOptions(arr, [], [\"balcony\"]).length;\r\n  const num_original = arr.length;\r\n  if (!len) {\r\n    copy_balcony.push({ name: \"balcony\", value: num_balcony });\r\n    copy_balcony.push({\r\n      name: \"no balcony\",\r\n      value: num_original - num_balcony\r\n    });\r\n  } else {\r\n    copy_balcony[0].value = filterOptions(arr, [], [\"balcony\"]).length;\r\n    copy_balcony[1].value = arr.length - copy_balcony[0].value;\r\n  }\r\n  return copy_balcony;\r\n};\r\n\r\nexport const calcPieLineChart = (arr, rooms, price_room) => {\r\n  const rlen = rooms.length;\r\n  const copy_rooms = [...rooms];\r\n  const copy_price_room = [...price_room];\r\n  for (let i = 1; i < 6; i++) {\r\n    const room_arr = filterRoom(arr, [], [i]);\r\n    const len = room_arr.length;\r\n    if (rlen) {\r\n      copy_rooms[i - 1].value = len;\r\n      copy_price_room[i - 1].price_sqm = averagePriceSqm(room_arr);\r\n    } else {\r\n      copy_rooms.push({\r\n        name: `#${i} room(s)`,\r\n        value: len\r\n      });\r\n      copy_price_room.push({\r\n        name: `#${i} room(s)`,\r\n        price_sqm: averagePriceSqm(room_arr)\r\n      });\r\n    }\r\n  }\r\n  return {\r\n    copy_rooms,\r\n    copy_price_room\r\n  };\r\n};\r\n\r\nexport const calcBarChart = (arr, years, fields) => {\r\n  const len = years.length;\r\n  const copy_years = [...years];\r\n  const { year, opts } = fields;\r\n  for (let i = 0; i < year.length; i++) {\r\n    const yearly = filterYear(arr, [], [year[i].id]);\r\n    if (len) {\r\n      const single_year = copy_years[i];\r\n      for (let opt of opts) {\r\n        const { id } = opt;\r\n        single_year[id] = filterOptions(yearly, [], [id]).length;\r\n      }\r\n    } else {\r\n      const obj = {\r\n        name: year[i].label\r\n      };\r\n      for (let opt of opts) {\r\n        const { id } = opt;\r\n        obj[id] = filterOptions(yearly, [], [id]).length;\r\n      }\r\n      copy_years.push(obj);\r\n    }\r\n  }\r\n  return copy_years;\r\n};\r\n\r\nexport const calcAreaChart = (arr, price_loc) => {\r\n  const len = price_loc.length;\r\n  const copy_price_loc = [...price_loc];\r\n  const seen = {};\r\n  for (let apt of arr) {\r\n    const { street, street_number, price_sqm, size_sqm } = apt;\r\n    const name = `${street} ${street_number}`;\r\n    const price = Math.round(size_sqm * price_sqm);\r\n    if (!seen.hasOwnProperty(name)) {\r\n      seen[name] = [];\r\n    }\r\n    seen[name].push(price);\r\n  }\r\n  const vals = Object.values(seen);\r\n  const keys = Object.keys(seen);\r\n  if (len) {\r\n    copy_price_loc.length = 0;\r\n  }\r\n  for (let i = 0; i < vals.length; i++) {\r\n    const max_price = Math.max(...vals[i]);\r\n    const min_price = Math.min(...vals[i]);\r\n    copy_price_loc.push({\r\n      name: keys[i],\r\n      min_price,\r\n      max_price\r\n    });\r\n  }\r\n  return copy_price_loc;\r\n};\r\n","import { built_year } from \"./built_year\";\r\nimport { options } from \"./options\";\r\nimport { rooms } from \"./rooms\";\r\nimport { size_sqm } from \"./size_sqm\";\r\nimport { price } from \"./price\";\r\nimport { location } from \"./location\";\r\n\r\nexport default {\r\n  loc: location,\r\n  area: size_sqm,\r\n  aprt_price: price,\r\n  year: built_year,\r\n  rooms,\r\n  opts: options\r\n};\r\n","export const location = {\r\n  name: \"location\",\r\n  label: \"Location\",\r\n  id: \"location\",\r\n  placeholder: \"Vallikatu\"\r\n};\r\n","export const size_sqm = [\r\n  {\r\n    name: \"size_sqm\",\r\n    placeholder: \"min\",\r\n    id: \"size_sqm_min\",\r\n    className: \"min\"\r\n  },\r\n  {\r\n    name: \"size_sqm\",\r\n    placeholder: \"max\",\r\n    id: \"size_sqm_max\",\r\n    className: \"max\"\r\n  }\r\n];\r\n","export const price = [\r\n  {\r\n    name: \"price\",\r\n    placeholder: \"min\",\r\n    id: \"price_min\",\r\n    className: \"min\"\r\n  },\r\n  {\r\n    name: \"price\",\r\n    placeholder: \"max\",\r\n    id: \"price_max\",\r\n    className: \"max\"\r\n  }\r\n];\r\n","export const built_year = [\r\n  {\r\n    name: \"built_year\",\r\n    label: \"< 1970\",\r\n    id: \"1970<\"\r\n  },\r\n  {\r\n    name: \"built_year\",\r\n    label: \"1970 - 1989\",\r\n    id: \"1970\"\r\n  },\r\n  {\r\n    name: \"built_year\",\r\n    label: \"1990 - 2009\",\r\n    id: \"1990\"\r\n  },\r\n  {\r\n    name: \"built_year\",\r\n    label: \"> 2010\",\r\n    id: \"2010>\"\r\n  }\r\n];\r\n","export const rooms = [\r\n  {\r\n    name: \"room_count\",\r\n    label: \"1R\",\r\n    id: \"1\"\r\n  },\r\n  {\r\n    name: \"room_count\",\r\n    label: \"2R\",\r\n    id: \"2\"\r\n  },\r\n  {\r\n    name: \"room_count\",\r\n    label: \"3R\",\r\n    id: \"3\"\r\n  },\r\n  {\r\n    name: \"room_count\",\r\n    label: \"4R\",\r\n    id: \"4\"\r\n  },\r\n  {\r\n    name: \"room_count\",\r\n    label: \"5R\",\r\n    id: \"5\"\r\n  }\r\n];\r\n","export const options = [\r\n  {\r\n    name: \"options\",\r\n    label: \"Balcony\",\r\n    id: \"balcony\"\r\n  },\r\n  {\r\n    name: \"options\",\r\n    label: \"Terrace\",\r\n    id: \"terassi\"\r\n  },\r\n  {\r\n    name: \"options\",\r\n    label: \"Storage\",\r\n    id: \"vh\"\r\n  },\r\n  {\r\n    name: \"options\",\r\n    label: \"Open-kitchen\",\r\n    id: \"avok\"\r\n  },\r\n  {\r\n    name: \"options\",\r\n    label: \"Kitchenette\",\r\n    id: \"kk\"\r\n  }\r\n];\r\n","import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Checkbox = ({ name, id, label, checked, handleCheck }) => {\r\n  return (\r\n    <Fragment>\r\n      <input\r\n        type=\"checkbox\"\r\n        name={name}\r\n        id={id}\r\n        checked={checked}\r\n        onChange={e => handleCheck(e, id)}\r\n      />\r\n      <label htmlFor={id}>{label}</label>\r\n      <br />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Checkbox;\r\n\r\nCheckbox.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n  label: PropTypes.string,\r\n  checked: PropTypes.bool,\r\n  handleCheck: PropTypes.func.isRequired\r\n};\r\n","import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Input = ({\r\n  name,\r\n  id,\r\n  className,\r\n  placeholder,\r\n  label,\r\n  value,\r\n  onChange\r\n}) => {\r\n  if ([\"min\", \"max\"].includes(placeholder)) {\r\n    const { min, max } = value;\r\n    value = placeholder === \"min\" ? min : max;\r\n  }\r\n  return (\r\n    <Fragment>\r\n      {label && <p>{label}</p>}\r\n      <input\r\n        type=\"text\"\r\n        name={name}\r\n        id={id && id}\r\n        className={className && className}\r\n        value={value}\r\n        placeholder={placeholder}\r\n        onChange={e => onChange(e, className)}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n\r\nInput.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n  className: PropTypes.string,\r\n  placeholder: PropTypes.string.isRequired,\r\n  label: PropTypes.string,\r\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.shape({})])\r\n    .isRequired,\r\n  onChange: PropTypes.func.isRequired\r\n};\r\n","import React, { PureComponent, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"../styles/_Form.scss\";\r\nimport fields from \"../fields\";\r\n\r\nimport Checkbox from \"../components/Checkbox\";\r\nimport TextInput from \"../components/TextInput\";\r\n\r\nclass Form extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      location: \"\",\r\n      room_count: [],\r\n      built_year: [],\r\n      size_sqm: {\r\n        min: \"\",\r\n        max: \"\"\r\n      },\r\n      price: {\r\n        min: \"\",\r\n        max: \"\"\r\n      },\r\n      options: []\r\n    };\r\n  }\r\n\r\n  handleChange = (e, className) => {\r\n    const { name, value } = e.target;\r\n    const { state } = this;\r\n    switch (name) {\r\n      case \"location\":\r\n        this.setState({ [name]: value });\r\n        break;\r\n      default:\r\n        this.setState({\r\n          [name]: { ...state[name], [className]: value }\r\n        });\r\n        break;\r\n    }\r\n  };\r\n\r\n  handleCheck = (e, id) => {\r\n    const { name, checked } = e.target;\r\n    const { state } = this;\r\n    if (!checked) {\r\n      const copy = [...state[name]];\r\n      const index = copy.indexOf(id);\r\n      copy.splice(index, 1);\r\n      this.setState({\r\n        [name]: copy\r\n      });\r\n    } else {\r\n      this.setState({\r\n        [name]: [...state[name], id]\r\n      });\r\n    }\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { filter } = this.props;\r\n    filter(this.state);\r\n  };\r\n\r\n  render() {\r\n    const { loc, area, aprt_price, year, rooms, opts } = fields;\r\n    const { location, size_sqm, price } = this.state;\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <TextInput {...loc} value={location} onChange={this.handleChange} />\r\n        <Fragment>\r\n          <p>Number of rooms:</p>\r\n          <div className=\"flex\">\r\n            {rooms.map((room, i) => (\r\n              <Checkbox key={i} {...room} handleCheck={this.handleCheck} />\r\n            ))}\r\n          </div>\r\n        </Fragment>\r\n        <Fragment>\r\n          <p>Built year:</p>\r\n          <div>\r\n            {year.map((year, i) => (\r\n              <Checkbox key={i} {...year} handleCheck={this.handleCheck} />\r\n            ))}\r\n          </div>\r\n        </Fragment>\r\n        <Fragment>\r\n          <p>Area:</p>\r\n          <div className=\"grid\">\r\n            {area.map((size, i) => (\r\n              <TextInput\r\n                key={i}\r\n                {...size}\r\n                value={size_sqm}\r\n                onChange={this.handleChange}\r\n              />\r\n            ))}\r\n          </div>\r\n        </Fragment>\r\n        <Fragment>\r\n          <p>Price:</p>\r\n          <div className=\"grid\">\r\n            {aprt_price.map((p, i) => (\r\n              <TextInput\r\n                key={i}\r\n                {...p}\r\n                value={price}\r\n                onChange={this.handleChange}\r\n              />\r\n            ))}\r\n          </div>\r\n        </Fragment>\r\n        <Fragment>\r\n          <p>Other options:</p>\r\n          <div>\r\n            {opts.map((opt, i) => (\r\n              <Checkbox key={i} {...opt} handleCheck={this.handleCheck} />\r\n            ))}\r\n          </div>\r\n        </Fragment>\r\n        <Fragment>\r\n          <input type=\"submit\" value=\"Search data\" />\r\n        </Fragment>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n\r\nForm.propTypes = {\r\n  filter: PropTypes.func.isRequired\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { PieChart, Pie, Tooltip, ResponsiveContainer } from \"recharts\";\r\n\r\nconst PercentagePie = ({ balcony, rooms }) => {\r\n  return (\r\n    <ResponsiveContainer width=\"100%\" height={300}>\r\n      <PieChart width={800} height={300}>\r\n        <Pie\r\n          isAnimationActive={false}\r\n          data={balcony}\r\n          dataKey=\"value\"\r\n          cx=\"35%\"\r\n          cy={150}\r\n          outerRadius={60}\r\n          fill=\"#8884d8\"\r\n          label\r\n        />\r\n        <Pie\r\n          isAnimationActive={false}\r\n          data={rooms}\r\n          dataKey=\"value\"\r\n          cx=\"35%\"\r\n          cy={150}\r\n          outerRadius={90}\r\n          innerRadius={70}\r\n          fill=\"#82ca9d\"\r\n          label\r\n        />\r\n        <Tooltip />\r\n      </PieChart>\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nexport default PercentagePie;\r\n\r\nPercentagePie.propTypes = {\r\n  balcony: PropTypes.array.isRequired,\r\n  rooms: PropTypes.array.isRequired\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer\r\n} from \"recharts\";\r\n\r\nconst StackedBar = ({ data, opts }) => {\r\n  const COLORS = [\"#17becf\", \"#82ca9d\", \"#FFBB28\", \"#8884d8\", \"#FF8042\"];\r\n\r\n  return (\r\n    <ResponsiveContainer width=\"100%\" height={350}>\r\n      <BarChart\r\n        width={480}\r\n        height={350}\r\n        data={data}\r\n        margin={{ top: 50, right: 0, left: 0, bottom: 0 }}\r\n      >\r\n        <CartesianGrid strokeDasharray=\"3 3\" />\r\n        <XAxis dataKey=\"name\" />\r\n        <YAxis />\r\n        <Tooltip />\r\n        {opts.map((opt, i) => (\r\n          <Bar key={i} dataKey={opt.id} stackId=\"a\" fill={COLORS[i]} />\r\n        ))}\r\n        <Legend wrapperStyle={{ left: \"25%\", display: \"flex\" }} />\r\n      </BarChart>\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nexport default StackedBar;\r\n\r\nStackedBar.propTypes = {\r\n  data: PropTypes.array.isRequired,\r\n  opts: PropTypes.array.isRequired\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer\r\n} from \"recharts\";\r\n\r\nconst SimpleLine = ({ data }) => {\r\n  return (\r\n    <ResponsiveContainer width=\"100%\" height={350}>\r\n      <LineChart\r\n        width={570}\r\n        height={350}\r\n        data={data}\r\n        margin={{ top: 60, right: 30, left: 50, bottom: 5 }}\r\n      >\r\n        <XAxis dataKey=\"name\" />\r\n        <YAxis />\r\n        <CartesianGrid strokeDasharray=\"3 3\" />\r\n        <Tooltip />\r\n        <Legend wrapperStyle={{ left: \"35%\" }} />\r\n        <Line\r\n          type=\"monotone\"\r\n          dataKey=\"price_sqm\"\r\n          stroke=\"#17becf\"\r\n          activeDot={{ r: 9 }}\r\n        />\r\n      </LineChart>\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nexport default SimpleLine;\r\n\r\nSimpleLine.propTypes = {\r\n  data: PropTypes.array.isRequired\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport {\r\n  AreaChart,\r\n  Area,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  ResponsiveContainer\r\n} from \"recharts\";\r\n\r\nconst SimpleArea = ({ data }) => {\r\n  return (\r\n    <ResponsiveContainer width=\"100%\" height={300}>\r\n      <AreaChart\r\n        width={590}\r\n        height={300}\r\n        data={data}\r\n        margin={{ top: 25, right: 50, left: 0, bottom: 0 }}\r\n      >\r\n        <CartesianGrid strokeDasharray=\"3 3\" />\r\n        <XAxis dataKey=\"name\" />\r\n        <YAxis />\r\n        <Tooltip />\r\n        <Area\r\n          type=\"monotone\"\r\n          dataKey=\"min_price\"\r\n          stackId=\"1\"\r\n          stroke=\"#8884d8\"\r\n          fill=\"#8884d8\"\r\n        />\r\n        <Area\r\n          type=\"monotone\"\r\n          dataKey=\"max_price\"\r\n          stackId=\"1\"\r\n          stroke=\"#82ca9d\"\r\n          fill=\"#82ca9d\"\r\n        />\r\n      </AreaChart>\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nexport default SimpleArea;\r\n\r\nSimpleArea.propTypes = {\r\n  data: PropTypes.array.isRequired\r\n};\r\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nimport \"./styles/_App.scss\";\nimport filterFunc from \"./utils\";\nimport fields from \"./fields\";\n\nimport Form from \"./containers/Form\";\nimport PercentagePie from \"./components/PercentagePie\";\nimport StackedBar from \"./components/StackedBar\";\nimport SimpleLine from \"./components/SimpleLine\";\nimport SimpleArea from \"./components/SimpleArea\";\n\nconst {\n  filterLoc,\n  filterSize,\n  filterPrice,\n  filterRoom,\n  filterYear,\n  filterOptions,\n  calcPieChart,\n  calcPieLineChart,\n  calcBarChart,\n  calcAreaChart\n} = filterFunc;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      apartments: [],\n      balcony: [],\n      rooms: [],\n      years: [],\n      price_room: [],\n      price_loc: [],\n      loading: true\n    };\n    this.original = [];\n  }\n\n  async componentDidMount() {\n    const url =\n      \"https://cc677kr6sc.execute-api.eu-central-1.amazonaws.com/data\";\n    const response = await axios.post(url, {\n      who_rules: \"kodit.io\"\n    });\n    this.original = [...this.original, ...response.data];\n\n    const { balcony, rooms, years, price_room, price_loc } = this.state;\n\n    // pie chart\n    const copy_balcony = calcPieChart(this.original, balcony);\n\n    // pie chart, line chart\n    const { copy_rooms, copy_price_room } = calcPieLineChart(\n      this.original,\n      rooms,\n      price_room\n    );\n\n    // bar chart\n    const copy_years = calcBarChart(this.original, years, fields);\n\n    // area chart\n    const copy_price_loc = calcAreaChart(this.original, price_loc);\n\n    this.setState({\n      loading: false,\n      balcony: copy_balcony,\n      rooms: copy_rooms,\n      years: copy_years,\n      price_room: copy_price_room,\n      price_loc: copy_price_loc\n    });\n  }\n\n  handleFilter = values => {\n    const {\n      apartments,\n      balcony,\n      years,\n      rooms,\n      price_room,\n      price_loc\n    } = this.state;\n    let apt = [...this.original];\n    let result = [];\n    const {\n      location,\n      room_count,\n      built_year,\n      size_sqm,\n      price,\n      options\n    } = values;\n\n    if (location) {\n      result = filterLoc(apt, location);\n    }\n    if (size_sqm.min || size_sqm.max) {\n      result = filterSize(apt, result, size_sqm);\n    }\n    if (price.min || price.max) {\n      result = filterPrice(apt, result, price);\n    }\n    if (room_count.length) {\n      result = filterRoom(apt, result, room_count);\n    }\n    if (built_year.length) {\n      result = filterYear(apt, result, built_year);\n    }\n    if (options.length) {\n      result = filterOptions(apt, result, options);\n    }\n\n    // for filter only\n    const copy_apartments = [...apartments];\n    copy_apartments.push(result);\n\n    // pie chart\n    const copy_balcony = calcPieChart(result, balcony);\n\n    // pie chart, line chart\n    const { copy_rooms, copy_price_room } = calcPieLineChart(\n      result,\n      rooms,\n      price_room\n    );\n\n    // bar chart\n    const copy_years = calcBarChart(result, years, fields);\n\n    // area chart\n    const copy_price_loc = calcAreaChart(result, price_loc);\n\n    this.setState({\n      apartments: copy_apartments,\n      balcony: copy_balcony,\n      rooms: copy_rooms,\n      years: copy_years,\n      price_room: copy_price_room,\n      price_loc: copy_price_loc\n    });\n  };\n\n  render() {\n    const { balcony, rooms, years, price_room, price_loc } = this.state;\n    const { opts } = fields;\n    return (\n      <div className=\"App\">\n        <div>\n          <Form filter={this.handleFilter} />\n        </div>\n        <div>\n          <PercentagePie balcony={balcony} rooms={rooms} />\n          <SimpleArea data={price_loc} />\n          <StackedBar data={years} opts={opts} />\n          <SimpleLine data={price_room} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}